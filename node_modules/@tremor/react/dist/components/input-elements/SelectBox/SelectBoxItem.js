'use client';
import{__rest as t}from"tslib";import e,{useContext as o}from"react";import{twMerge as l}from"tailwind-merge";import"../../../contexts/BaseColorContext.js";import r from"../../../contexts/HoveredValueContext.js";import"../../../contexts/RootStylesContext.js";import a from"../../../contexts/SelectedValueContext.js";import{fontSize as n}from"../../../lib/font.js";import{sizing as i}from"../../../lib/sizing.js";import{spacing as s}from"../../../lib/spacing.js";import{colorPalette as m,DEFAULT_COLOR as c}from"../../../lib/theme.js";import{getColorClassNames as u,makeClassName as x}from"../../../lib/utils.js";const d=x("SelectBoxItem"),g=e.forwardRef(((x,g)=>{const{value:p,text:f,icon:C,className:h,onClick:b}=x,j=t(x,["value","text","icon","className","onClick"]),{selectedValue:k,handleValueChange:v}=o(a),{hoveredValue:w}=o(r),B=k===p,N=w===p,V=B?u(c,m.lightBackground).bgColor:N?u(c,m.canvasBackground).bgColor:u(c,m.canvasBackground).hoverBgColor,y=B?u(c,m.darkestText).textColor:u(c,m.darkText).textColor,S=C;return e.createElement("button",Object.assign({ref:g,type:"button",onClick:t=>{null==v||v(p),null==b||b(t)},className:l(d("root"),"flex items-center justify-start w-full truncate",s.twoXl.paddingX,s.md.paddingY,n.sm,V,y,h)},j),S?e.createElement(S,{className:l(d("icon"),"flex-none",i.lg.height,i.lg.width,s.lg.marginRight,u(c,m.lightText).textColor),"aria-hidden":"true"}):null,e.createElement("p",{className:l(d("text"),"text-sm whitespace-nowrap truncate")},null!=f?f:p))}));g.displayName="SelectBoxItem";export{g as default};
