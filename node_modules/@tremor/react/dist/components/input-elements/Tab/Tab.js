'use client';
import{__rest as t}from"tslib";import e,{useContext as o}from"react";import{twMerge as r}from"tailwind-merge";import l from"../../../contexts/BaseColorContext.js";import"../../../contexts/HoveredValueContext.js";import"../../../contexts/RootStylesContext.js";import a from"../../../contexts/SelectedValueContext.js";import{border as i}from"../../../lib/shape.js";import{sizing as s}from"../../../lib/sizing.js";import{spacing as n}from"../../../lib/spacing.js";import{fontSize as m,fontWeight as c}from"../../../lib/font.js";import{colorPalette as x,DEFAULT_COLOR as p}from"../../../lib/theme.js";import{getColorClassNames as d,makeClassName as f}from"../../../lib/utils.js";const u=f("Tab"),b=e.forwardRef(((f,b)=>{const{value:g,text:C,icon:h,className:j,onClick:w}=f,v=t(f,["value","text","icon","className","onClick"]),{selectedValue:N,handleValueChange:T}=o(a),V=o(l),k=N===g,B=h,E=r(d(V,x.text).textColor,d(V,x.border).borderColor,i.md.bottom),R=r(d("transparent").borderColor,d(p,x.lightText).textColor,d(p,x.text).hoverTextColor,d(p,x.border).hoverBorderColor,"hover:border-b-2");return e.createElement("button",Object.assign({ref:b,className:r(u("root"),"flex whitespace-nowrap max-w-xs truncate","focus:outline-none focus:ring-0",n.twoXs.paddingX,n.sm.paddingY,n.px.negativeMarginBottom,m.sm,c.md,k?E:R,j),value:g,onClick:t=>{null==T||T(g),null==w||w(t)}},v),B?e.createElement(B,{className:r(u("icon"),"flex-none",s.lg.height,s.lg.width,n.sm.marginRight,k?d(V,x.text).textColor:d(p,x.lightText).textColor),"aria-hidden":"true"}):null,e.createElement("p",{className:r(u("text"),"text-sm whitespace-nowrap")},C))}));b.displayName="Tab";export{b as default};
