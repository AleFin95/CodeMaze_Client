import e,{useState as t,useContext as a}from"react";import{twMerge as r}from"tailwind-merge";import{startOfMonth as n,format as l,endOfMonth as o,eachDayOfInterval as s,isSunday as i,previousSunday as c,isSaturday as m,nextSaturday as d,getDay as g,add as u}from"date-fns";import h from"../../../contexts/BaseColorContext.js";import"../../../contexts/HoveredValueContext.js";import"../../../contexts/RootStylesContext.js";import"../../../contexts/SelectedValueContext.js";import"tslib";import f from"../../../assets/ArrowRightHeadIcon.js";import x from"../../../assets/ArrowLeftHeadIcon.js";import p from"../../../assets/DoubleArrowLeftHeadIcon.js";import b from"../../../assets/DoubleArrowRightHeadIcon.js";import{borderRadius as C,border as v,boxShadow as y}from"../../../lib/shape.js";import{sizing as E}from"../../../lib/sizing.js";import{spacing as k}from"../../../lib/spacing.js";import{fontSize as D,fontWeight as N}from"../../../lib/font.js";import{colorPalette as w,DEFAULT_COLOR as j}from"../../../lib/theme.js";import{getColorClassNames as M}from"../../../lib/utils.js";import{capitalize as H,makeDateRangePickerClassName as B,getWeekdays as R,getDateStyles as Y}from"./dateRangePickerUtils.js";const P=["","col-start-2","col-start-3","col-start-4","col-start-5","col-start-6","col-start-7"],S=({enableYearPagination:t,anchorDate:a,setStartOfCurrMonth:o,locale:s})=>{const i=n(a),c=e=>{switch(e){case"nextMonth":o(u(i,{months:1}));break;case"prevMonth":o(u(i,{months:-1}));break;case"nextYear":o(u(i,{years:1}));break;case"prevYear":o(u(i,{years:-1}))}},m=H(l(i,"MMMM yyyy",{locale:s}),s);return e.createElement("div",{className:r(B("calendarHeader"),"flex justify-between items-center",k.twoXs.paddingX,k.sm.paddingY)},e.createElement("div",{className:r(B("calendarHeaderPrevSelection"),"flex items-center space-x-1")},e.createElement("button",{type:"button",className:r(B("calendarHeaderPrevYearButton"),"inline-flex focus:outline-none focus:ring-2",!t&&"hidden",M(j,w.canvasBackground).hoverBgColor,M(j,w.ring).borderColor,M("blue",w.lightRing).focusRingColor,k.twoXs.paddingAll,k.px.marginRight,D.sm,N.md,C.sm.all,v.sm.all,y.sm),onClick:()=>c("prevYear")},e.createElement(p,{className:r(B("calendarHeaderPrevYearIcon"),M(j,w.darkText).textColor,E.lg.height,E.lg.width),"aria-hidden":"true"})),e.createElement("button",{type:"button",name:"prevMonth",className:r(B("calendarHeaderPrevMonthButton"),"inline-flex focus:outline-none focus:ring-2",M(j,w.canvasBackground).hoverBgColor,M(j,w.ring).borderColor,M("blue",w.lightRing).focusRingColor,k.twoXs.paddingAll,D.sm,N.md,C.sm.all,v.sm.all,y.sm),onClick:()=>c("prevMonth")},e.createElement(x,{className:r(B("calendarHeaderPrevMonthIcon"),M(j,w.darkText).textColor,E.lg.height,E.lg.width),"aria-hidden":"true"}))),e.createElement("h2",{className:r(B("calendarHeaderText"),"text-elem",M(j,w.darkestText).textColor,D.sm,N.lg)},m),e.createElement("div",{className:r(B("calendarHeaderNextSelection"),"flex items-center space-x-1")},e.createElement("button",{type:"button",name:"nextMonth",className:r(B("calendarHeaderNextMonthButton"),"inline-flex focus:outline-none focus:ring-2",M(j,w.canvasBackground).hoverBgColor,M(j,w.ring).borderColor,M("blue",w.lightRing).focusRingColor,k.twoXs.paddingAll,D.sm,N.md,C.sm.all,v.sm.all,y.sm),onClick:()=>c("nextMonth")},e.createElement(f,{className:r(B("calendarHeaderNextMonthIcon"),M(j,w.darkText).textColor,E.lg.height,E.lg.width),"aria-hidden":"true"})),e.createElement("button",{type:"button",className:r(B("calendarHeaderNextYearButton"),"inline-flex focus:outline-none focus:ring-2",!t&&"hidden",M(j,w.canvasBackground).hoverBgColor,M(j,w.ring).borderColor,M("blue",w.lightRing).focusRingColor,k.twoXs.paddingAll,k.px.marginLeft,D.sm,N.md,C.sm.all,v.sm.all,y.sm),onClick:()=>c("nextYear")},e.createElement(b,{className:r(B("calendarHeaderNextYearIcon"),"shrink-0 flex-0",M(j,w.darkText).textColor,E.lg.height,E.lg.width),"aria-hidden":"true"}))))},X=({anchorDate:u,selectedStartDate:f,selectedEndDate:x,onDateClick:p,minDate:b,maxDate:C,locale:v})=>{const[y,k]=t(),S=a(h),X=n(u),A=o(u),I=R(v).map((e=>H(e,v))),T=s({start:i(X)?X:c(X),end:m(A)?A:d(A)});return e.createElement(e.Fragment,null,e.createElement("div",{className:r(B("calendarBodyWeekdays"),"grid grid-cols-7 text-center",M(j,w.ring).textColor,D.xs,N.md)},I.map((t=>e.createElement("div",{key:t,className:"w-full flex justify-center"},e.createElement("div",{className:r("flex items-center justify-center w-full",E.threeXl.height)},t))))),e.createElement("div",{className:r(B("calendarBodyDatesGrid"),"grid grid-cols-7")},T.map((t=>{const a=((e,t,a,r,n)=>null!==t&&e<t||null!==a&&e>a||!(e>=r&&e<=n))(t,b,C,X,A);return e.createElement("div",{key:t.toString(),className:r(B("calendarBodyDate"),P[g(t)],"w-full")},e.createElement("button",{type:"button",onClick:()=>p(t),onPointerEnter:()=>null==k?void 0:k(t),onPointerLeave:()=>null==k?void 0:k(void 0),className:r("w-full flex items-center justify-center",E.threeXl.height,D.sm,Y(t,f,x,y,a,S)),disabled:a},e.createElement("time",{dateTime:l(t,"yyyy-MM-dd",{locale:v})},l(t,"d",{locale:v}))))}))))},A=({enableYearPagination:t,anchorDate:a,setStartOfCurrMonth:n,startDate:l,endDate:o,minDate:s,maxDate:i,onDateClick:c,locale:m})=>e.createElement("div",{className:r(k.lg.paddingX,k.twoXs.paddingY)},e.createElement(S,{enableYearPagination:t,anchorDate:a,setStartOfCurrMonth:n,locale:m}),e.createElement(X,{anchorDate:a,selectedStartDate:l,selectedEndDate:o,onDateClick:c,minDate:s,maxDate:i,locale:m}));export{P as colStartClasses,A as default};
