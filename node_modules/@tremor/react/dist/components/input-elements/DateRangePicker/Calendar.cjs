"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("react"),a=require("tailwind-merge"),t=require("date-fns"),r=require("../../../contexts/BaseColorContext.cjs");require("../../../contexts/HoveredValueContext.cjs"),require("../../../contexts/RootStylesContext.cjs"),require("../../../contexts/SelectedValueContext.cjs"),require("tslib");var l=require("../../../assets/ArrowRightHeadIcon.cjs"),o=require("../../../assets/ArrowLeftHeadIcon.cjs"),s=require("../../../assets/DoubleArrowLeftHeadIcon.cjs"),n=require("../../../assets/DoubleArrowRightHeadIcon.cjs"),i=require("../../../lib/shape.cjs"),c=require("../../../lib/sizing.cjs"),d=require("../../../lib/spacing.cjs"),g=require("../../../lib/font.cjs"),m=require("../../../lib/theme.cjs"),u=require("../../../lib/utils.cjs"),C=require("./dateRangePickerUtils.cjs");function f(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var h=f(e);const x=["","col-start-2","col-start-3","col-start-4","col-start-5","col-start-6","col-start-7"],N=({enableYearPagination:e,anchorDate:r,setStartOfCurrMonth:f,locale:x})=>{const N=t.startOfMonth(r),k=e=>{switch(e){case"nextMonth":f(t.add(N,{months:1}));break;case"prevMonth":f(t.add(N,{months:-1}));break;case"nextYear":f(t.add(N,{years:1}));break;case"prevYear":f(t.add(N,{years:-1}))}},D=C.capitalize(t.format(N,"MMMM yyyy",{locale:x}),x);return h.default.createElement("div",{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeader"),"flex justify-between items-center",d.spacing.twoXs.paddingX,d.spacing.sm.paddingY)},h.default.createElement("div",{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderPrevSelection"),"flex items-center space-x-1")},h.default.createElement("button",{type:"button",className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderPrevYearButton"),"inline-flex focus:outline-none focus:ring-2",!e&&"hidden",u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.canvasBackground).hoverBgColor,u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.ring).borderColor,u.getColorClassNames("blue",m.colorPalette.lightRing).focusRingColor,d.spacing.twoXs.paddingAll,d.spacing.px.marginRight,g.fontSize.sm,g.fontWeight.md,i.borderRadius.sm.all,i.border.sm.all,i.boxShadow.sm),onClick:()=>k("prevYear")},h.default.createElement(s,{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderPrevYearIcon"),u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.darkText).textColor,c.sizing.lg.height,c.sizing.lg.width),"aria-hidden":"true"})),h.default.createElement("button",{type:"button",name:"prevMonth",className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderPrevMonthButton"),"inline-flex focus:outline-none focus:ring-2",u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.canvasBackground).hoverBgColor,u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.ring).borderColor,u.getColorClassNames("blue",m.colorPalette.lightRing).focusRingColor,d.spacing.twoXs.paddingAll,g.fontSize.sm,g.fontWeight.md,i.borderRadius.sm.all,i.border.sm.all,i.boxShadow.sm),onClick:()=>k("prevMonth")},h.default.createElement(o,{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderPrevMonthIcon"),u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.darkText).textColor,c.sizing.lg.height,c.sizing.lg.width),"aria-hidden":"true"}))),h.default.createElement("h2",{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderText"),"text-elem",u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.darkestText).textColor,g.fontSize.sm,g.fontWeight.lg)},D),h.default.createElement("div",{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderNextSelection"),"flex items-center space-x-1")},h.default.createElement("button",{type:"button",name:"nextMonth",className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderNextMonthButton"),"inline-flex focus:outline-none focus:ring-2",u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.canvasBackground).hoverBgColor,u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.ring).borderColor,u.getColorClassNames("blue",m.colorPalette.lightRing).focusRingColor,d.spacing.twoXs.paddingAll,g.fontSize.sm,g.fontWeight.md,i.borderRadius.sm.all,i.border.sm.all,i.boxShadow.sm),onClick:()=>k("nextMonth")},h.default.createElement(l,{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderNextMonthIcon"),u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.darkText).textColor,c.sizing.lg.height,c.sizing.lg.width),"aria-hidden":"true"})),h.default.createElement("button",{type:"button",className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderNextYearButton"),"inline-flex focus:outline-none focus:ring-2",!e&&"hidden",u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.canvasBackground).hoverBgColor,u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.ring).borderColor,u.getColorClassNames("blue",m.colorPalette.lightRing).focusRingColor,d.spacing.twoXs.paddingAll,d.spacing.px.marginLeft,g.fontSize.sm,g.fontWeight.md,i.borderRadius.sm.all,i.border.sm.all,i.boxShadow.sm),onClick:()=>k("nextYear")},h.default.createElement(n,{className:a.twMerge(C.makeDateRangePickerClassName("calendarHeaderNextYearIcon"),"shrink-0 flex-0",u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.darkText).textColor,c.sizing.lg.height,c.sizing.lg.width),"aria-hidden":"true"}))))},k=({anchorDate:l,selectedStartDate:o,selectedEndDate:s,onDateClick:n,minDate:i,maxDate:d,locale:f})=>{const[N,k]=e.useState(),D=e.useContext(r),b=t.startOfMonth(l),R=t.endOfMonth(l),p=C.getWeekdays(f).map((e=>C.capitalize(e,f))),P=t.eachDayOfInterval({start:t.isSunday(b)?b:t.previousSunday(b),end:t.isSaturday(R)?R:t.nextSaturday(R)});return h.default.createElement(h.default.Fragment,null,h.default.createElement("div",{className:a.twMerge(C.makeDateRangePickerClassName("calendarBodyWeekdays"),"grid grid-cols-7 text-center",u.getColorClassNames(m.DEFAULT_COLOR,m.colorPalette.ring).textColor,g.fontSize.xs,g.fontWeight.md)},p.map((e=>h.default.createElement("div",{key:e,className:"w-full flex justify-center"},h.default.createElement("div",{className:a.twMerge("flex items-center justify-center w-full",c.sizing.threeXl.height)},e))))),h.default.createElement("div",{className:a.twMerge(C.makeDateRangePickerClassName("calendarBodyDatesGrid"),"grid grid-cols-7")},P.map((e=>{const r=((e,a,t,r,l)=>null!==a&&e<a||null!==t&&e>t||!(e>=r&&e<=l))(e,i,d,b,R);return h.default.createElement("div",{key:e.toString(),className:a.twMerge(C.makeDateRangePickerClassName("calendarBodyDate"),x[t.getDay(e)],"w-full")},h.default.createElement("button",{type:"button",onClick:()=>n(e),onPointerEnter:()=>null==k?void 0:k(e),onPointerLeave:()=>null==k?void 0:k(void 0),className:a.twMerge("w-full flex items-center justify-center",c.sizing.threeXl.height,g.fontSize.sm,C.getDateStyles(e,o,s,N,r,D)),disabled:r},h.default.createElement("time",{dateTime:t.format(e,"yyyy-MM-dd",{locale:f})},t.format(e,"d",{locale:f}))))}))))};exports.colStartClasses=x,exports.default=({enableYearPagination:e,anchorDate:t,setStartOfCurrMonth:r,startDate:l,endDate:o,minDate:s,maxDate:n,onDateClick:i,locale:c})=>h.default.createElement("div",{className:a.twMerge(d.spacing.lg.paddingX,d.spacing.twoXs.paddingY)},h.default.createElement(N,{enableYearPagination:e,anchorDate:t,setStartOfCurrMonth:r,locale:c}),h.default.createElement(k,{anchorDate:t,selectedStartDate:l,selectedEndDate:o,onDateClick:i,minDate:s,maxDate:n,locale:c}));
