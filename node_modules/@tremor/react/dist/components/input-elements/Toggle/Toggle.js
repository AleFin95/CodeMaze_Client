'use client';
import{__rest as e}from"tslib";import t from"react";import{twMerge as o}from"tailwind-merge";import l from"../../../contexts/BaseColorContext.js";import"../../../contexts/HoveredValueContext.js";import"../../../contexts/RootStylesContext.js";import r from"../../../contexts/SelectedValueContext.js";import a from"../../../hooks/useInternalState.js";import{BaseColors as s}from"../../../lib/constants.js";import{borderRadius as n}from"../../../lib/shape.js";import{spacing as i}from"../../../lib/spacing.js";import{colorPalette as m,DEFAULT_COLOR as c}from"../../../lib/theme.js";import{getColorClassNames as u,makeClassName as f}from"../../../lib/utils.js";const p=f("Toggle"),d=t.forwardRef(((f,d)=>{const{defaultValue:g,value:j,onValueChange:h,color:x=s.Blue,children:C,className:b}=f,v=e(f,["defaultValue","value","onValueChange","color","children","className"]),[V,w]=a(g,j);return t.createElement("div",Object.assign({ref:d,className:o(p("root"),"flex-nowrap inline-flex justify-start",u(c,m.lightBackground).bgColor,i.twoXs.paddingAll,n.lg.all,b)},v),t.createElement(r.Provider,{value:{selectedValue:V,handleValueChange:e=>{null==h||h(e),w(e)}}},t.createElement(l.Provider,{value:x},t.Children.map(C,(e=>t.cloneElement(e))))))}));d.displayName="Toggle";export{d as default};
