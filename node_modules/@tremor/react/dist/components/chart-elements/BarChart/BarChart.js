'use client';
import{__rest as t}from"tslib";import e,{useState as a}from"react";import{twMerge as i}from"tailwind-merge";import{ResponsiveContainer as o,BarChart as r,CartesianGrid as n,XAxis as l,YAxis as s,Tooltip as m,Legend as c,Bar as d}from"recharts";import{constructCategoryColors as p,getYAxisDomain as h}from"../common/utils.js";import y from"../common/ChartLegend.js";import f from"../common/ChartTooltip.js";import u from"../common/NoData.js";import{hexColors as v}from"../../../lib/hexColors.js";import{BaseColors as x}from"../../../lib/constants.js";import{themeColorRange as w}from"../../../lib/theme.js";import{defaultValueFormatter as g}from"../../../lib/utils.js";const k=e.forwardRef(((k,E)=>{const{data:A=[],categories:L=[],index:D,colors:b=w,valueFormatter:j=g,layout:F="horizontal",stack:S=!1,relative:T=!1,startEndOnly:z=!1,animationDuration:C=1500,showAnimation:V=!0,showXAxis:I=!0,showYAxis:N=!0,yAxisWidth:G=56,showTooltip:H=!0,showLegend:O=!0,showGridLines:K=!0,autoMinValue:B=!1,minValue:M,maxValue:W,allowDecimals:X=!0,className:Y,noDataText:R}=k,$=t(k,["data","categories","index","colors","valueFormatter","layout","stack","relative","startEndOnly","animationDuration","showAnimation","showXAxis","showYAxis","yAxisWidth","showTooltip","showLegend","showGridLines","autoMinValue","minValue","maxValue","allowDecimals","className","noDataText"]),[q,J]=a(60),P=p(L,b),Q=h(B,M,W);return e.createElement("div",Object.assign({ref:E,className:i("w-full h-80",Y)},$),e.createElement(o,{width:"100%",height:"100%"},(null==A?void 0:A.length)?e.createElement(r,{data:A,stackOffset:T?"expand":"none",layout:"vertical"===F?"vertical":"horizontal"},K?e.createElement(n,{strokeDasharray:"3 3",horizontal:"vertical"!==F,vertical:"vertical"===F}):null,"vertical"!==F?e.createElement(l,{hide:!I,dataKey:D,interval:"preserveStartEnd",tick:{transform:"translate(0, 6)"},ticks:z?[A[0][D],A[A.length-1][D]]:void 0,style:{fontSize:"12px",fontFamily:"Inter; Helvetica",marginTop:"20px"},tickLine:!1,axisLine:!1}):e.createElement(l,{hide:!I,type:"number",tick:{transform:"translate(-3, 0)"},domain:Q,style:{fontSize:"12px",fontFamily:"Inter; Helvetica"},tickLine:!1,axisLine:!1,tickFormatter:j,padding:{left:10,right:10},minTickGap:5,allowDecimals:X}),"vertical"!==F?e.createElement(s,{width:G,hide:!N,axisLine:!1,tickLine:!1,type:"number",domain:Q,tick:{transform:"translate(-3, 0)"},style:{fontSize:"12px",fontFamily:"Inter; Helvetica"},tickFormatter:T?t=>`${(100*t).toString()} %`:j,allowDecimals:X}):e.createElement(s,{width:G,hide:!N,dataKey:D,axisLine:!1,tickLine:!1,ticks:z?[A[0][D],A[A.length-1][D]]:void 0,type:"category",interval:"preserveStartEnd",tick:{transform:"translate(0, 6)"},style:{fontSize:"12px",fontFamily:"Inter; Helvetica"}}),H?e.createElement(m,{wrapperStyle:{outline:"none"},isAnimationActive:!1,cursor:{fill:"#d1d5db",opacity:"0.15"},content:({active:t,payload:a,label:i})=>e.createElement(f,{active:t,payload:a,label:i,valueFormatter:j,categoryColors:P}),position:{y:0}}):null,O?e.createElement(c,{verticalAlign:"top",height:q,content:({payload:t})=>y({payload:t},P,J)}):null,L.map((t=>{var a;return e.createElement(d,{key:t,name:t,type:"linear",stackId:S||T?"a":void 0,dataKey:t,fill:v[null!==(a=P.get(t))&&void 0!==a?a:x.Gray],isAnimationActive:V,animationDuration:C})}))):e.createElement(u,{noDataText:R})))}));k.displayName="BarChart";export{k as default};
