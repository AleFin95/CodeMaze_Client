'use client';
import{__rest as e}from"tslib";import r from"react";import{twMerge as t}from"tailwind-merge";import{borderRadius as o}from"../../../lib/shape.js";import{spacing as l}from"../../../lib/spacing.js";import{colorPalette as a}from"../../../lib/theme.js";import{mergeRefs as s,getColorClassNames as i,makeClassName as c}from"../../../lib/utils.js";import m,{useTooltip as n}from"../../util-elements/Tooltip/Tooltip.js";const p=c("Tracker"),f=r.forwardRef(((l,c)=>{const{color:f,tooltip:d}=l,u=e(l,["color","tooltip"]),{tooltipProps:b,getReferenceProps:g}=n();return r.createElement("div",Object.assign({ref:s([c,b.refs.setReference]),className:t(p("trackingBlock"),"w-full h-full",i(null!=f?f:"gray",a.background).bgColor,o.md.all)},u,g),r.createElement(m,Object.assign({text:d},b)))}));f.displayName="TrackerBlock";const d=r.forwardRef(((o,a)=>{const{data:s=[],className:i}=o,c=e(o,["data","className"]);return r.createElement("div",Object.assign({ref:a,className:t(p("root"),"w-full flex items-center h-10",l.threeXs.spaceX,i)},c),s.map(((e,t)=>{var o;return r.createElement(f,{key:null!==(o=e.key)&&void 0!==o?o:t,color:e.color,tooltip:e.tooltip})})))}));d.displayName="Tracker";export{d as default,p as makeTrackerClassName};
